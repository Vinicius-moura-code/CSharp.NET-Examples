// <auto-generated />
using System;
using GenshinImpact.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GenshinImpact.Migrations
{
    [DbContext(typeof(GenshinContext))]
    partial class GenshinContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GenshinImpact.Models.Artifacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EnemiesId")
                        .HasColumnType("int");

                    b.Property<string>("Four_piece__bonus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Max_rarity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Two_piece_bonus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnemiesId");

                    b.ToTable("Artifacts");
                });

            modelBuilder.Entity("GenshinImpact.Models.Characters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Affiliation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Birthday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdConstellation")
                        .HasColumnType("int");

                    b.Property<int>("IdNation")
                        .HasColumnType("int");

                    b.Property<int>("IdWeapon")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<string>("Vision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vision_key")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdConstellation");

                    b.HasIndex("IdNation");

                    b.HasIndex("IdWeapon");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("GenshinImpact.Models.Constellations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CharactersId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unlock")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharactersId");

                    b.ToTable("Constellations");
                });

            modelBuilder.Entity("GenshinImpact.Models.ConsumablesFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasRecipe")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Proficiency")
                        .HasColumnType("int");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConsumablesFood");
                });

            modelBuilder.Entity("GenshinImpact.Models.ConsumablesPotions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ConsumablesPotions");
                });

            modelBuilder.Entity("GenshinImpact.Models.Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdventureExperience")
                        .HasColumnType("int");

                    b.Property<int>("CompanionshipExperience")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Mora")
                        .HasColumnType("int");

                    b.Property<int?>("RewardsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RewardsId");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("GenshinImpact.Models.Domains", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdNation")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdNation");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("GenshinImpact.Models.Drops", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DetailsId")
                        .HasColumnType("int");

                    b.Property<int>("Drop_max")
                        .HasColumnType("int");

                    b.Property<int>("Drop_min")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DetailsId");

                    b.ToTable("Drops");
                });

            modelBuilder.Entity("GenshinImpact.Models.Elemental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdKey")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdKey");

                    b.ToTable("Elemental");
                });

            modelBuilder.Entity("GenshinImpact.Models.ElementalDesciption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnemiesId")
                        .HasColumnType("int");

                    b.Property<int>("IdElement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnemiesId");

                    b.HasIndex("IdElement");

                    b.ToTable("ElementalDesciption");
                });

            modelBuilder.Entity("GenshinImpact.Models.Elements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DomainsId")
                        .HasColumnType("int");

                    b.Property<int?>("EnemiesId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DomainsId");

                    b.HasIndex("EnemiesId");

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("GenshinImpact.Models.Enemies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Faction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mora_gained")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Enemies");
                });

            modelBuilder.Entity("GenshinImpact.Models.Materials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdType");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("GenshinImpact.Models.Nations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Archon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllingEntity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdElement")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdElement");

                    b.ToTable("Nations");
                });

            modelBuilder.Entity("GenshinImpact.Models.PassiveTalents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CharactersId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unlock")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharactersId");

                    b.ToTable("PassiveTalents");
                });

            modelBuilder.Entity("GenshinImpact.Models.Reactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ElementalId")
                        .HasColumnType("int");

                    b.Property<int>("IdElements")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ElementalId");

                    b.HasIndex("IdElements");

                    b.ToTable("Reactions");
                });

            modelBuilder.Entity("GenshinImpact.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConsumablesFoodId")
                        .HasColumnType("int");

                    b.Property<int?>("ConsumablesPotionsId")
                        .HasColumnType("int");

                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConsumablesFoodId");

                    b.HasIndex("ConsumablesPotionsId");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("GenshinImpact.Models.Requirements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdventureRank")
                        .HasColumnType("int");

                    b.Property<int?>("DomainsId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("LeyLineDisorder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecommendedLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DomainsId");

                    b.ToTable("Requirements");
                });

            modelBuilder.Entity("GenshinImpact.Models.Rewards", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DomainsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DomainsId");

                    b.ToTable("Rewards");
                });

            modelBuilder.Entity("GenshinImpact.Models.SkillTalents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CharactersId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unlock")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharactersId");

                    b.ToTable("SkillTalents");
                });

            modelBuilder.Entity("GenshinImpact.Models.Weapons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaseAttack")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassiveName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<string>("SubSpassiveDesctat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubStat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("GenshinImpact.Models.Artifacts", b =>
                {
                    b.HasOne("GenshinImpact.Models.Enemies", null)
                        .WithMany("Artifacts")
                        .HasForeignKey("EnemiesId");
                });

            modelBuilder.Entity("GenshinImpact.Models.Characters", b =>
                {
                    b.HasOne("GenshinImpact.Models.Constellations", "Constellation")
                        .WithMany()
                        .HasForeignKey("IdConstellation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenshinImpact.Models.Nations", "Nation")
                        .WithMany()
                        .HasForeignKey("IdNation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenshinImpact.Models.Weapons", "Weapon")
                        .WithMany()
                        .HasForeignKey("IdWeapon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Constellation");

                    b.Navigation("Nation");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("GenshinImpact.Models.Constellations", b =>
                {
                    b.HasOne("GenshinImpact.Models.Characters", null)
                        .WithMany("Constellations")
                        .HasForeignKey("CharactersId");
                });

            modelBuilder.Entity("GenshinImpact.Models.Details", b =>
                {
                    b.HasOne("GenshinImpact.Models.Rewards", null)
                        .WithMany("Details")
                        .HasForeignKey("RewardsId");
                });

            modelBuilder.Entity("GenshinImpact.Models.Domains", b =>
                {
                    b.HasOne("GenshinImpact.Models.Nations", "Nation")
                        .WithMany()
                        .HasForeignKey("IdNation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nation");
                });

            modelBuilder.Entity("GenshinImpact.Models.Drops", b =>
                {
                    b.HasOne("GenshinImpact.Models.Details", null)
                        .WithMany("Drops")
                        .HasForeignKey("DetailsId");
                });

            modelBuilder.Entity("GenshinImpact.Models.Elemental", b =>
                {
                    b.HasOne("GenshinImpact.Models.Elements", "Key")
                        .WithMany()
                        .HasForeignKey("IdKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Key");
                });

            modelBuilder.Entity("GenshinImpact.Models.ElementalDesciption", b =>
                {
                    b.HasOne("GenshinImpact.Models.Enemies", null)
                        .WithMany("Elemental_description")
                        .HasForeignKey("EnemiesId");

                    b.HasOne("GenshinImpact.Models.Elements", "Element")
                        .WithMany()
                        .HasForeignKey("IdElement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element");
                });

            modelBuilder.Entity("GenshinImpact.Models.Elements", b =>
                {
                    b.HasOne("GenshinImpact.Models.Domains", null)
                        .WithMany("RecommendedElements")
                        .HasForeignKey("DomainsId");

                    b.HasOne("GenshinImpact.Models.Enemies", null)
                        .WithMany("Elements")
                        .HasForeignKey("EnemiesId");
                });

            modelBuilder.Entity("GenshinImpact.Models.Materials", b =>
                {
                    b.HasOne("GenshinImpact.Models.Elements", "Type")
                        .WithMany()
                        .HasForeignKey("IdType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("GenshinImpact.Models.Nations", b =>
                {
                    b.HasOne("GenshinImpact.Models.Elements", "Element")
                        .WithMany()
                        .HasForeignKey("IdElement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element");
                });

            modelBuilder.Entity("GenshinImpact.Models.PassiveTalents", b =>
                {
                    b.HasOne("GenshinImpact.Models.Characters", null)
                        .WithMany("PassiveTalents")
                        .HasForeignKey("CharactersId");
                });

            modelBuilder.Entity("GenshinImpact.Models.Reactions", b =>
                {
                    b.HasOne("GenshinImpact.Models.Elemental", null)
                        .WithMany("Reactions")
                        .HasForeignKey("ElementalId");

                    b.HasOne("GenshinImpact.Models.Elements", "Elements")
                        .WithMany()
                        .HasForeignKey("IdElements")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Elements");
                });

            modelBuilder.Entity("GenshinImpact.Models.Recipe", b =>
                {
                    b.HasOne("GenshinImpact.Models.ConsumablesFood", null)
                        .WithMany("Recipe")
                        .HasForeignKey("ConsumablesFoodId");

                    b.HasOne("GenshinImpact.Models.ConsumablesPotions", null)
                        .WithMany("Crafting")
                        .HasForeignKey("ConsumablesPotionsId");
                });

            modelBuilder.Entity("GenshinImpact.Models.Requirements", b =>
                {
                    b.HasOne("GenshinImpact.Models.Domains", null)
                        .WithMany("Requirements")
                        .HasForeignKey("DomainsId");
                });

            modelBuilder.Entity("GenshinImpact.Models.Rewards", b =>
                {
                    b.HasOne("GenshinImpact.Models.Domains", null)
                        .WithMany("Rewards")
                        .HasForeignKey("DomainsId");
                });

            modelBuilder.Entity("GenshinImpact.Models.SkillTalents", b =>
                {
                    b.HasOne("GenshinImpact.Models.Characters", null)
                        .WithMany("SkillTalents")
                        .HasForeignKey("CharactersId");
                });

            modelBuilder.Entity("GenshinImpact.Models.Characters", b =>
                {
                    b.Navigation("Constellations");

                    b.Navigation("PassiveTalents");

                    b.Navigation("SkillTalents");
                });

            modelBuilder.Entity("GenshinImpact.Models.ConsumablesFood", b =>
                {
                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("GenshinImpact.Models.ConsumablesPotions", b =>
                {
                    b.Navigation("Crafting");
                });

            modelBuilder.Entity("GenshinImpact.Models.Details", b =>
                {
                    b.Navigation("Drops");
                });

            modelBuilder.Entity("GenshinImpact.Models.Domains", b =>
                {
                    b.Navigation("RecommendedElements");

                    b.Navigation("Requirements");

                    b.Navigation("Rewards");
                });

            modelBuilder.Entity("GenshinImpact.Models.Elemental", b =>
                {
                    b.Navigation("Reactions");
                });

            modelBuilder.Entity("GenshinImpact.Models.Enemies", b =>
                {
                    b.Navigation("Artifacts");

                    b.Navigation("Elemental_description");

                    b.Navigation("Elements");
                });

            modelBuilder.Entity("GenshinImpact.Models.Rewards", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
